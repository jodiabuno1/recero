<div class="d-flex justify-content-center full-h">
	<form class="w-50 py-3">
		<div class="text-center">
			<img class="w-75" src="/img/logo_recero.png" alt="logo_recero" />
		</div>
		<h1 class="text-center">Registro</h1>
		<div class="mb-3">
			<label for="exampleInputEmail1" class="form-label">Rut</label>
			<input
				type="text"
				class="form-control"
				id="exampleInputEmail1"
				aria-describedby="emailHelp"
			/>
		</div>
		<div class="mb-3">
			<lable for="name" class="form-label">Nombre</lable>
			<input type="text" class="form-control" id="name" />
		</div>
		<div class="mb-3">
			<lable for="first-name" class="form-label">Apellido Paterno</lable>
			<input type="text" class="form-control" />
		</div>
		<div class="mb-3">
			<lable for="other-name" class="form-label">Apellido Materno</lable>
			<input type="text" class="form-control" />
		</div>
		<div class="mb-3">
			<lable for="direction" class="form-label">Direcci칩n</lable>
			<select class="form-select" aria-label="Default select example" id="direction">
				<option selected>Comuna</option>
        {{#each counties}}
          <option value="{{this.id}}">{{this.name}}</option> 
        {{/each }}
			</select>
		</div>
		<div class="mb-3">
			<lable for="born-date" class="form-label">Fecha de nacimiento</lable>
			<input type="date" class="form-control" id="born-date" />
		</div>
		<div class="mb-3">
			<lable for="email" class="form-label">Correo</lable>
			<input type="email" class="form-control" id="email" />
		</div>
		<div class="mb-3">
			<label for="password" class="form-label">Contrase침a</label>
			<input type="password" class="form-control" id="password" />
		</div>
		<div class="mb-3">
			<label for="repeat-password" class="form-label">Repita contrase침a</label>
			<input type="password" class="form-control" id="repeat-password" />
		</div>
		<div class="text-center">
			<button type="submit" class="btn btn-primary">Registrarse</button>
		</div>
	</form>
</div>
<div class="alert alert-danger d-none" role="alert" id="alert-failed">
  <p class="text-center">Debe completar todos los campos</p>
</div>
<div class="alert alert-success d-none" role="alert" id="alert">
  <p class="text-center">Registro completado exitosamente, ingrese a su correo para confirmar registro</p>
</div>
<script>
  const form = document.querySelector("form")
  const input = document.querySelectorAll("input")
  const select = document.querySelector("select")
  const alertMessage = document.querySelector("#alert")
	const alertFailed = document.querySelector("#alert-failed")

  form.addEventListener("submit",async(e)=>{
    e.preventDefault()
    const [
      Rut_Num_Usuario,
      Nombres_Usuario,
      Apellido_Paterno, 
      Apellido_Materno,
      Fecha_Nacimiento,
      Correo_Usuario,
      Contrasena_Perfil,
      Contrasena_valid
      ] = [...input].map((({value}) => value))
    const Id_Direccion = select.value
    const validation = [
      Rut_Num_Usuario,
      Nombres_Usuario,
      Apellido_Paterno, 
      Apellido_Materno,
      Fecha_Nacimiento,
      Correo_Usuario,
      Contrasena_Perfil,
      Contrasena_valid
      ].every(inputElement => inputElement)
    try{
      if(!validation || !Id_Direccion ){
        throw new Error("Debe completar todos los campos")
      }
      if(Contrasena_Perfil !== Contrasena_valid){
        throw new Error("Contrase침as no coinciden")
      }
      const {data: isAdult} = await axios.post("/age",{
        Fecha_Nacimiento
      })
      if(!isAdult){
        throw new Error("Debes ser mayor de edad para registrarte")
      }
      const {data} = await axios.post("/register",{
        Rut_Num_Usuario,
        Nombres_Usuario,
        Apellido_Paterno,
        Apellido_Materno,
        Id_Direccion: +Id_Direccion,
        Fecha_Nacimiento,
        Correo_Usuario,
        Contrasena_Perfil,
      })
      alertMessage.classList.remove("d-none")
      setTimeout(()=>{
        alertMessage.classList.add("d-none")
      },4000)
    }catch(e){
      alertFailed.textContent = ""
      alertFailed.insertAdjacentHTML("beforeend", `<p class="text-center">${e.response? e.response.data : e.message}</p>`)  
      alertFailed.classList.remove("d-none")
      setTimeout(()=>{
        alertFailed.classList.add("d-none")
      },4000)
    }
  })

/* const validarRut = (rut) => {
  try{
    const [body,verif] = rut.split("-");
  }catch(e){
    console.log(e)
  }
} */

</script>