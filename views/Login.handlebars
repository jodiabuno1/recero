  {{>Nav}}
  <div class="d-flex justify-content-center align-items-center full-h" id="spinner">
    <div class="spinner-border text-success " role="status" >
      <span class="visually-hidden">Loading...</span>
    </div>
    <p class="px-5">Verificando...</p>
  </div>
  <div class="d-flex justify-content-center full-h d-none" id="login-view">
  <form class="pt-5">
  <h1 class="text-center">Login</h1>
  <div class="mb-3">
    <label for="exampleInputEmail1" class="form-label">Rut</label>
    <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
  </div>
  <div class="mb-3">
    <label for="exampleInputPassword1" class="form-label">Contraseña</label>
    <input type="password" class="form-control" id="exampleInputPassword1">
  </div>
  <button type="submit" class="btn btn-primary">Entrar</button>
</form>
</div>
<div class="alert alert-danger d-none" role="alert" id="alert-empty">
  <p class="text-center">Debe completar todos los campos</p>
</div>
<div class="alert alert-danger d-none" role="alert" id="alert-failed">
  <p class="text-center">Usuario o contraseña no válidos</p>
</div>
<script>
  const loginView = document.querySelector("#login-view")
  const spiner = document.querySelector("#spinner")
  const tokenLocalStorage = window.localStorage.getItem("token")
  if(tokenLocalStorage){
    setTimeout(()=>{
      window.location.href = "/user"
    },1000)
  }else {
    spiner.classList.add("d-none")
    loginView.classList.remove("d-none")
  }
  const form = document.querySelector("form")
  const inputs = document.querySelectorAll("input")
  const alertEmpty = document.querySelector("#alert-empty")
  const alertFailed = document.querySelector("#alert-failed")

  form.addEventListener("submit",async(e)=>{
    e.preventDefault()
    const [rut,pass] = [...inputs].map(i => i.value)
    if(!rut || !pass ){
      alertEmpty.classList.remove("d-none")
      setTimeout(()=>{
        alertEmpty.classList.add("d-none")
      },4000)
      return
    }
    try{
      const {data: {token,Descripcion_Perfil}} = await axios.post("/login/verify",{
        Rut_Num_Usuario:rut,
        Contrasena_Perfil:pass
      })
      if(token){
        localStorage.setItem("token",token)
        if(Descripcion_Perfil === "Admin"){
          window.location.href = "/admin"
        }else if(Descripcion_Perfil === "User"){
          window.location.href = "/user"
        }else{
          window.location.href = "/workers"
        }
      }
    }catch(error){
      alertFailed.textContent = ""
      alertFailed.insertAdjacentHTML("beforeend", `<p class="text-center">${error.response.data}</p>`)  
      alertFailed.classList.remove("d-none")
      setTimeout(()=>{
        alertFailed.classList.add("d-none")
        alertFailed.textContent = ""
      alertFailed.insertAdjacentHTML("beforeend", `<p class="text-center">Usuario o contraseña no válidos</p>`)  
      },4000)
    }

  })
</script>